
jobs:
  - job: ${{ parameters.name }}
    pool:
      vmImage: ${{ parameters.image }}

    steps:
      - task: CmdLine@2
        inputs:
          script: gradle wrapper
        displayName: "Generate 'gradlew'"

      - task: Gradle@2
        inputs:
          jdkVersionOption: '1.11'
          tasks: 'tasks'
        displayName: "Check if Gradle is working"

      # cpp tasks
      - task: Gradle@2
        inputs:
          options: '-b build-cpp.gradle'
          jdkVersionOption: '1.11'
          tasks: 'codegen'
        displayName: "C++ Codegen with Java Compiler"

      - task: Gradle@2
        inputs:
          options: '-b build-cpp.gradle'
          jdkVersionOption: '1.11'
          jdkArchitectureOption: 'x64'
          tasks: 'assembleDebug assembleRelease'
        displayName: "C++ Build(Assemble)"

      - task: Gradle@2
        inputs:
          options: '-b build-cpp.gradle'
          jdkVersionOption: '1.11'
          jdkArchitectureOption: 'x64'
          tasks: 'build' # include 'test'
        displayName: "C++ Unit Test"

      # java tasks
      - task: Gradle@2
        inputs:
          options: '-b build-java.gradle'
          jdkVersionOption: '1.11'
          jdkArchitectureOption: 'x64'
          tasks: 'assemble'
        displayName: "Java Build(Assemble)"

      - task: Gradle@2
        inputs:
          options: '-b build-java.gradle'
          jdkVersionOption: '1.11'
          jdkArchitectureOption: 'x64'
          tasks: 'test'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
        displayName: "Java Unit Test - JUnit5"
